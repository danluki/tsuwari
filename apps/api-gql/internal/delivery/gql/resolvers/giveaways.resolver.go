package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.57

import (
	"context"
	"fmt"

	"github.com/twirapp/twir/apps/api-gql/internal/delivery/gql/gqlmodel"
)

// GiveawaysCreate is the resolver for the giveawaysCreate field.
func (r *mutationResolver) GiveawaysCreate(ctx context.Context, opts gqlmodel.GiveawaysCreateInput) (*gqlmodel.ChannelGiveaway, error) {
	panic(fmt.Errorf("not implemented: GiveawaysCreate - giveawaysCreate"))
}

// GiveawaysUpdate is the resolver for the giveawaysUpdate field.
func (r *mutationResolver) GiveawaysUpdate(ctx context.Context, id string, opts gqlmodel.GiveawaysUpdateInput) (*gqlmodel.ChannelGiveaway, error) {
	panic(fmt.Errorf("not implemented: GiveawaysUpdate - giveawaysUpdate"))
}

// GiveawaysRemove is the resolver for the giveawaysRemove field.
func (r *mutationResolver) GiveawaysRemove(ctx context.Context, id string) (*gqlmodel.ChannelGiveaway, error) {
	panic(fmt.Errorf("not implemented: GiveawaysRemove - giveawaysRemove"))
}

// Giveaways is the resolver for the giveaways field.
func (r *queryResolver) Giveaways(ctx context.Context) ([]gqlmodel.ChannelGiveaway, error) {
	panic(fmt.Errorf("not implemented: Giveaways - giveaways"))
}

// Giveaway is the resolver for the giveaway field.
func (r *queryResolver) Giveaway(ctx context.Context, giveawayID string) (*gqlmodel.ChannelGiveaway, error) {
	panic(fmt.Errorf("not implemented: Giveaway - giveaway"))
}

// GiveawayParticipants is the resolver for the giveawayParticipants field.
func (r *queryResolver) GiveawayParticipants(ctx context.Context, giveawayID string) ([]gqlmodel.ChannelGiveawayParticipants, error) {
	// r.deps.GiveawaysService.
	return nil, nil
}
